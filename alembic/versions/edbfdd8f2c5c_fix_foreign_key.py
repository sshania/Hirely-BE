"""fix foreign key

Revision ID: edbfdd8f2c5c
Revises: 
Create Date: 2025-03-21 14:50:03.089848

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'edbfdd8f2c5c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Company',
    sa.Column('Company_id', sa.Integer(), nullable=False),
    sa.Column('Company_Name', sa.String(length=100), nullable=True),
    sa.Column('Company_Email', sa.String(length=50), nullable=False),
    sa.Column('Company_Phone_Number', sa.String(length=10), nullable=False),
    sa.Column('Company_Description', sa.String(length=255), nullable=True),
    sa.Column('Company_Location', sa.String(length=100), nullable=True),
    sa.Column('Company_Link', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('Company_id')
    )
    op.create_index(op.f('ix_Company_Company_Name'), 'Company', ['Company_Name'], unique=True)
    op.create_index(op.f('ix_Company_Company_id'), 'Company', ['Company_id'], unique=False)
    op.create_table('Skill',
    sa.Column('Skill_Id', sa.Integer(), nullable=False),
    sa.Column('Skill_Name', sa.String(length=50), nullable=True),
    sa.Column('Skill_Type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('Skill_Id')
    )
    op.create_index(op.f('ix_Skill_Skill_Id'), 'Skill', ['Skill_Id'], unique=False)
    op.create_index(op.f('ix_Skill_Skill_Name'), 'Skill', ['Skill_Name'], unique=True)
    op.create_table('User',
    sa.Column('User_id', sa.Integer(), nullable=False),
    sa.Column('User_Name', sa.String(length=100), nullable=True),
    sa.Column('User_Password', sa.String(length=100), nullable=False),
    sa.Column('User_Email', sa.String(length=50), nullable=False),
    sa.Column('User_Phone_Number', sa.String(length=10), nullable=False),
    sa.Column('User_Gender', sa.String(length=10), nullable=True),
    sa.Column('User_Description', sa.String(length=255), nullable=True),
    sa.Column('User_Work_Experience', sa.Integer(), nullable=True),
    sa.Column('User_Final_Academic', sa.Enum('SD', 'SMP', 'SMA', 'D3', 'S1', 'S2', 'S3', name='academiclevel'), nullable=False),
    sa.PrimaryKeyConstraint('User_id')
    )
    op.create_index(op.f('ix_User_User_Name'), 'User', ['User_Name'], unique=True)
    op.create_index(op.f('ix_User_User_id'), 'User', ['User_id'], unique=False)
    op.create_table('Job_Matchmaking_History',
    sa.Column('History_Id', sa.Integer(), nullable=False),
    sa.Column('User_id', sa.Integer(), nullable=False),
    sa.Column('Company_id', sa.Integer(), nullable=False),
    sa.Column('Score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['Company_id'], ['Company.Company_id'], ),
    sa.ForeignKeyConstraint(['User_id'], ['User.User_id'], ),
    sa.PrimaryKeyConstraint('History_Id')
    )
    op.create_index(op.f('ix_Job_Matchmaking_History_History_Id'), 'Job_Matchmaking_History', ['History_Id'], unique=False)
    op.create_table('Skill_Requirements',
    sa.Column('Skill_Requirements_Id', sa.Integer(), nullable=False),
    sa.Column('Company_id', sa.Integer(), nullable=True),
    sa.Column('Skill_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Company_id'], ['Company.Company_id'], ),
    sa.ForeignKeyConstraint(['Skill_id'], ['Skill.Skill_Id'], ),
    sa.PrimaryKeyConstraint('Skill_Requirements_Id')
    )
    op.create_index(op.f('ix_Skill_Requirements_Skill_Requirements_Id'), 'Skill_Requirements', ['Skill_Requirements_Id'], unique=False)
    op.create_table('User_Skills',
    sa.Column('User_Skills_Id', sa.Integer(), nullable=False),
    sa.Column('User_id', sa.Integer(), nullable=True),
    sa.Column('Skill_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Skill_id'], ['Skill.Skill_Id'], ),
    sa.ForeignKeyConstraint(['User_id'], ['User.User_id'], ),
    sa.PrimaryKeyConstraint('User_Skills_Id')
    )
    op.create_index(op.f('ix_User_Skills_User_Skills_Id'), 'User_Skills', ['User_Skills_Id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_User_Skills_User_Skills_Id'), table_name='User_Skills')
    op.drop_table('User_Skills')
    op.drop_index(op.f('ix_Skill_Requirements_Skill_Requirements_Id'), table_name='Skill_Requirements')
    op.drop_table('Skill_Requirements')
    op.drop_index(op.f('ix_Job_Matchmaking_History_History_Id'), table_name='Job_Matchmaking_History')
    op.drop_table('Job_Matchmaking_History')
    op.drop_index(op.f('ix_User_User_id'), table_name='User')
    op.drop_index(op.f('ix_User_User_Name'), table_name='User')
    op.drop_table('User')
    op.drop_index(op.f('ix_Skill_Skill_Name'), table_name='Skill')
    op.drop_index(op.f('ix_Skill_Skill_Id'), table_name='Skill')
    op.drop_table('Skill')
    op.drop_index(op.f('ix_Company_Company_id'), table_name='Company')
    op.drop_index(op.f('ix_Company_Company_Name'), table_name='Company')
    op.drop_table('Company')
    # ### end Alembic commands ###
